{"version":3,"sources":["assets/house.svg","assets/github.svg","assets/email.svg","assets/smartphone.svg","assets/cv.svg","Projects.js","Components/Item.js","Components/PortfIntro.js","Components/Portfolio.js","Components/Homepage.js","Components/Nav.js","Components/Main.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Projects","id","name","tech","description","image","Item","makeStyles","card","maxWidth","media","height","React","useState","open","setOpen","className","onClick","src","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","class","Fade","in","Card","CardMedia","component","CardContent","CardActions","Button","size","color","PortfIntro","Portfolio","portfolioItem","map","i","key","t","Homepage","to","Nav","href","homeLogo","Main","basename","exact","path","Component","About","target","githubLogo","cvLogo","emailLogo","phoneLogo","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff46ba59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/house.a2220148.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.af6134f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/smartphone.4e0c281b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cv.936d0f42.svg\";","\r\nexport const Projects = [\r\n  {\r\n    id: 1,\r\n    name: 'Portfolio Site',\r\n    tech: [\r\n      'HTML',\r\n      'CSS',\r\n      'SASS',\r\n      'React',\r\n      'Material UI',\r\n      'Responsive'\r\n    ],\r\n    description: 'This is built as my personal mini site to showcase my portfolio and essentially act as an extension to my CV. I wanted to build it using React as a learning process and it is my first project built using it. While developing it I learned a lot about how React works, such as components and routing' ,\r\n    image: 'portfolio.jpg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Demva',\r\n    tech: [\r\n      'HTML',\r\n      'CSS',\r\n      'WordPress',\r\n      'Content Writing'\r\n    ],\r\n    description: 'This is my first ever commercial project, for a real company, that included content writing, graphics design and development. It was made when I first gained interest in Web Development and although did not require expert coding knowledge, it did provide me great basic understanding of HTML, CSS and WordPress.',\r\n    image: 'demva.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Construction Website',\r\n    tech: [\r\n      'HTML',\r\n      'CSS',\r\n      'Bootstrap',\r\n    ],\r\n    description: 'A simple one page website created for a totally not made up company. It was built mostly learning excercise, especially focusing on different ways approaching of layout, grid and learning to use BootStrap',\r\n    image: 'construction.jpg'\r\n\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Basic List',\r\n    tech: [\r\n      'HTML',\r\n      'CSS',\r\n      'JavaScript',\r\n    ],\r\n    description: 'Lorem3',\r\n    image: 'Image4.jpg'\r\n\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Basic List',\r\n    tech: [\r\n      'HTML',\r\n      'CSS',\r\n      'JavaScript',\r\n    ],\r\n    description: 'Lorem3',\r\n    image: 'Image4.jpg'\r\n\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Basic List',\r\n    tech: [\r\n      'HTML',\r\n      'CSS',\r\n      'JavaScript',\r\n    ],\r\n    description: 'Lorem3',\r\n    image: 'Image4.jpg'\r\n\r\n  }\r\n];\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport './Main.scss';\r\nimport Projects from '../Projects';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\n  \r\n  const Item = ({ image, description, name, tech }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <img className='portfolioItem' onClick={handleOpen} src={image}/>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <div class='modalItem'>\r\n        <Fade in={open}>\r\n        <Card>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"250\"\r\n          image={image}\r\n        />\r\n        \r\n        <CardContent>\r\n          <h1>{name}</h1>\r\n          <div>{tech}</div>\r\n          <p>{description}</p>\r\n        </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Live\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Code\r\n        </Button>\r\n      </CardActions>\r\n      \r\n    </Card>\r\n    </Fade>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Item;","import React from \"react\"\r\nimport './Main.scss';\r\n\r\nconst PortfIntro = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='heading'>Portfolio</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PortfIntro;","import React from \"react\"\r\nimport './Main.scss';\r\nimport Projects from '../Projects';\r\nimport Item from './Item';\r\nimport PortfIntro from './PortfIntro';\r\n\r\n\r\nconst Portfolio = () => {\r\n  const portfolioItem = Projects.map(( i) => {\r\n    return <Item\r\n    key={i}\r\n    image={i.image}\r\n    description={i.description}\r\n    name={i.name}\r\n    tech={i.tech.map((t) =>\r\n    <span> {t} </span>\r\n    )}\r\n    />\r\n  })\r\n   return (\r\n     <div className='container'>\r\n      <PortfIntro />\r\n      <div className='portfGrid'>\r\n      {portfolioItem}\r\n      </div>\r\n     </div>\r\n   )\r\n }\r\n\r\n \r\nexport default Portfolio;\r\n\r\n","import React from \"react\"\r\nimport './Main.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <div className='intro'>\r\n      <h1 className='mainHeading'>Vikintas Raudavicius</h1>\r\n      <p className='subHeading'>Front-End Developer you need</p>\r\n      <div className='buttons'>\r\n        <Link className='buttonIntro' to='/Portfolio'>Portfolio</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homepage;\r\n\r\n","import React from \"react\"\r\nimport './Main.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport homeLogo from '../assets/house.svg';\r\n\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className='navigation'>\r\n     <a href='/Homepage'><img className='home' src={homeLogo} /></a>\r\n     {/* <Link to='/'><img className='home' src={homeLogo} /></Link> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\"\r\nimport Portfolio from './Portfolio';\r\nimport Homepage from './Homepage';\r\nimport About from './About';\r\nimport Nav from './Nav';\r\nimport './Main.scss';\r\nimport { Route, HashRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Main extends React.Component {\r\n  render () {\r\n    return (\r\n      <HashRouter basename='/'>\r\n      <div>\r\n        <Route exact={true} path=\"/\" component={Homepage}/>\r\n        <Route path=\"/\" component={Nav} />\r\n        <Route path=\"/portfolio\" component={Portfolio}/>\r\n      </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport './Contact.scss';\r\nimport githubLogo from '../assets/github.svg';\r\nimport emailLogo from '../assets/email.svg';\r\nimport phoneLogo from '../assets/smartphone.svg';\r\nimport cvLogo from '../assets/cv.svg';\r\n\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className='contacts'>\r\n    <div>\r\n      <a className='space-between' target='__blank' href='https://github.com/vikintasr'><img className='cntcIcon' src={githubLogo} />Github</a>\r\n    </div>\r\n    <div>\r\n      <a className='space-between' target='__blank' href='https://drive.google.com/open?id=12GZRVbXbTqtcP5wc3k9C5J_hfReUn3zD'><img className='cntcIcon' src={cvLogo} /><p>Resume</p></a>\r\n    </div>\r\n    <div>\r\n      <a className='space-between' href='mailto: vikintas.raudavicius@gmail.com'><img className='cntcIcon' src={emailLogo} />Email</a>\r\n    </div>\r\n    <div>\r\n      <a className='space-between' href='tel:+44 7707 440374'><img className='cntcIcon' src={phoneLogo} />Phone</a>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default About;\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './App.scss';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './Components/Main';\r\nimport Contact from './Components/Contact';\r\nimport Nav from './Components/Nav';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <Main />\r\n    <Nav />\r\n    <Contact />\r\n  </BrowserRouter>\r\n)\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Projects } from './Projects';\n\nReactDOM.render(\n<App />,\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}